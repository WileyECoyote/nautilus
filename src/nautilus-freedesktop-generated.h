/*
 * Generated by gdbus-codegen 2.32.4. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __NAUTILUS_FREEDESKTOP_GENERATED_H__
#define __NAUTILUS_FREEDESKTOP_GENERATED_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.FileManager1 */

#define NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1 (nautilus_freedesktop_file_manager1_get_type ())
#define NAUTILUS_FREEDESKTOP_FILE_MANAGER1(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1, NautilusFreedesktopFileManager1))
#define NAUTILUS_FREEDESKTOP_IS_FILE_MANAGER1(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1))
#define NAUTILUS_FREEDESKTOP_FILE_MANAGER1_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1, NautilusFreedesktopFileManager1Iface))

struct _NautilusFreedesktopFileManager1;
typedef struct _NautilusFreedesktopFileManager1 NautilusFreedesktopFileManager1;
typedef struct _NautilusFreedesktopFileManager1Iface NautilusFreedesktopFileManager1Iface;

struct _NautilusFreedesktopFileManager1Iface
{
  GTypeInterface parent_iface;

  gboolean (*handle_show_folders) (
    NautilusFreedesktopFileManager1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *arg_URIs,
    const gchar *arg_StartupId);

  gboolean (*handle_show_item_properties) (
    NautilusFreedesktopFileManager1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *arg_URIs,
    const gchar *arg_StartupId);

  gboolean (*handle_show_items) (
    NautilusFreedesktopFileManager1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *arg_URIs,
    const gchar *arg_StartupId);

};

GType nautilus_freedesktop_file_manager1_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *nautilus_freedesktop_file_manager1_interface_info (void);
guint nautilus_freedesktop_file_manager1_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void nautilus_freedesktop_file_manager1_complete_show_folders (
    NautilusFreedesktopFileManager1 *object,
    GDBusMethodInvocation *invocation);

void nautilus_freedesktop_file_manager1_complete_show_items (
    NautilusFreedesktopFileManager1 *object,
    GDBusMethodInvocation *invocation);

void nautilus_freedesktop_file_manager1_complete_show_item_properties (
    NautilusFreedesktopFileManager1 *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void nautilus_freedesktop_file_manager1_call_show_folders (
    NautilusFreedesktopFileManager1 *proxy,
    const gchar *const *arg_URIs,
    const gchar *arg_StartupId,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean nautilus_freedesktop_file_manager1_call_show_folders_finish (
    NautilusFreedesktopFileManager1 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean nautilus_freedesktop_file_manager1_call_show_folders_sync (
    NautilusFreedesktopFileManager1 *proxy,
    const gchar *const *arg_URIs,
    const gchar *arg_StartupId,
    GCancellable *cancellable,
    GError **error);

void nautilus_freedesktop_file_manager1_call_show_items (
    NautilusFreedesktopFileManager1 *proxy,
    const gchar *const *arg_URIs,
    const gchar *arg_StartupId,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean nautilus_freedesktop_file_manager1_call_show_items_finish (
    NautilusFreedesktopFileManager1 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean nautilus_freedesktop_file_manager1_call_show_items_sync (
    NautilusFreedesktopFileManager1 *proxy,
    const gchar *const *arg_URIs,
    const gchar *arg_StartupId,
    GCancellable *cancellable,
    GError **error);

void nautilus_freedesktop_file_manager1_call_show_item_properties (
    NautilusFreedesktopFileManager1 *proxy,
    const gchar *const *arg_URIs,
    const gchar *arg_StartupId,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean nautilus_freedesktop_file_manager1_call_show_item_properties_finish (
    NautilusFreedesktopFileManager1 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean nautilus_freedesktop_file_manager1_call_show_item_properties_sync (
    NautilusFreedesktopFileManager1 *proxy,
    const gchar *const *arg_URIs,
    const gchar *arg_StartupId,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1_PROXY (nautilus_freedesktop_file_manager1_proxy_get_type ())
#define NAUTILUS_FREEDESKTOP_FILE_MANAGER1_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1_PROXY, NautilusFreedesktopFileManager1Proxy))
#define NAUTILUS_FREEDESKTOP_FILE_MANAGER1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1_PROXY, NautilusFreedesktopFileManager1ProxyClass))
#define NAUTILUS_FREEDESKTOP_FILE_MANAGER1_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1_PROXY, NautilusFreedesktopFileManager1ProxyClass))
#define NAUTILUS_FREEDESKTOP_IS_FILE_MANAGER1_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1_PROXY))
#define NAUTILUS_FREEDESKTOP_IS_FILE_MANAGER1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1_PROXY))

typedef struct _NautilusFreedesktopFileManager1Proxy NautilusFreedesktopFileManager1Proxy;
typedef struct _NautilusFreedesktopFileManager1ProxyClass NautilusFreedesktopFileManager1ProxyClass;
typedef struct _NautilusFreedesktopFileManager1ProxyPrivate NautilusFreedesktopFileManager1ProxyPrivate;

struct _NautilusFreedesktopFileManager1Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  NautilusFreedesktopFileManager1ProxyPrivate *priv;
};

struct _NautilusFreedesktopFileManager1ProxyClass
{
  GDBusProxyClass parent_class;
};

GType nautilus_freedesktop_file_manager1_proxy_get_type (void) G_GNUC_CONST;

void nautilus_freedesktop_file_manager1_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
NautilusFreedesktopFileManager1 *nautilus_freedesktop_file_manager1_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
NautilusFreedesktopFileManager1 *nautilus_freedesktop_file_manager1_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void nautilus_freedesktop_file_manager1_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
NautilusFreedesktopFileManager1 *nautilus_freedesktop_file_manager1_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
NautilusFreedesktopFileManager1 *nautilus_freedesktop_file_manager1_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1_SKELETON (nautilus_freedesktop_file_manager1_skeleton_get_type ())
#define NAUTILUS_FREEDESKTOP_FILE_MANAGER1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1_SKELETON, NautilusFreedesktopFileManager1Skeleton))
#define NAUTILUS_FREEDESKTOP_FILE_MANAGER1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1_SKELETON, NautilusFreedesktopFileManager1SkeletonClass))
#define NAUTILUS_FREEDESKTOP_FILE_MANAGER1_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1_SKELETON, NautilusFreedesktopFileManager1SkeletonClass))
#define NAUTILUS_FREEDESKTOP_IS_FILE_MANAGER1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1_SKELETON))
#define NAUTILUS_FREEDESKTOP_IS_FILE_MANAGER1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), NAUTILUS_FREEDESKTOP_TYPE_FILE_MANAGER1_SKELETON))

typedef struct _NautilusFreedesktopFileManager1Skeleton NautilusFreedesktopFileManager1Skeleton;
typedef struct _NautilusFreedesktopFileManager1SkeletonClass NautilusFreedesktopFileManager1SkeletonClass;
typedef struct _NautilusFreedesktopFileManager1SkeletonPrivate NautilusFreedesktopFileManager1SkeletonPrivate;

struct _NautilusFreedesktopFileManager1Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  NautilusFreedesktopFileManager1SkeletonPrivate *priv;
};

struct _NautilusFreedesktopFileManager1SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType nautilus_freedesktop_file_manager1_skeleton_get_type (void) G_GNUC_CONST;

NautilusFreedesktopFileManager1 *nautilus_freedesktop_file_manager1_skeleton_new (void);


/* ---- */

#define NAUTILUS_FREEDESKTOP_TYPE_OBJECT (nautilus_freedesktop_object_get_type ())
#define NAUTILUS_FREEDESKTOP_OBJECT(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NAUTILUS_FREEDESKTOP_TYPE_OBJECT, NautilusFreedesktopObject))
#define NAUTILUS_FREEDESKTOP_IS_OBJECT(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NAUTILUS_FREEDESKTOP_TYPE_OBJECT))
#define NAUTILUS_FREEDESKTOP_OBJECT_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), NAUTILUS_FREEDESKTOP_TYPE_OBJECT, NautilusFreedesktopObject))

struct _NautilusFreedesktopObject;
typedef struct _NautilusFreedesktopObject NautilusFreedesktopObject;
typedef struct _NautilusFreedesktopObjectIface NautilusFreedesktopObjectIface;

struct _NautilusFreedesktopObjectIface
{
  GTypeInterface parent_iface;
};

GType nautilus_freedesktop_object_get_type (void) G_GNUC_CONST;

NautilusFreedesktopFileManager1 *nautilus_freedesktop_object_get_file_manager1 (NautilusFreedesktopObject *object);
NautilusFreedesktopFileManager1 *nautilus_freedesktop_object_peek_file_manager1 (NautilusFreedesktopObject *object);

#define NAUTILUS_FREEDESKTOP_TYPE_OBJECT_PROXY (nautilus_freedesktop_object_proxy_get_type ())
#define NAUTILUS_FREEDESKTOP_OBJECT_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_PROXY, NautilusFreedesktopObjectProxy))
#define NAUTILUS_FREEDESKTOP_OBJECT_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_PROXY, NautilusFreedesktopObjectProxyClass))
#define NAUTILUS_FREEDESKTOP_OBJECT_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_PROXY, NautilusFreedesktopObjectProxyClass))
#define NAUTILUS_FREEDESKTOP_IS_OBJECT_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_PROXY))
#define NAUTILUS_FREEDESKTOP_IS_OBJECT_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_PROXY))

typedef struct _NautilusFreedesktopObjectProxy NautilusFreedesktopObjectProxy;
typedef struct _NautilusFreedesktopObjectProxyClass NautilusFreedesktopObjectProxyClass;
typedef struct _NautilusFreedesktopObjectProxyPrivate NautilusFreedesktopObjectProxyPrivate;

struct _NautilusFreedesktopObjectProxy
{
  /*< private >*/
  GDBusObjectProxy parent_instance;
  NautilusFreedesktopObjectProxyPrivate *priv;
};

struct _NautilusFreedesktopObjectProxyClass
{
  GDBusObjectProxyClass parent_class;
};

GType nautilus_freedesktop_object_proxy_get_type (void) G_GNUC_CONST;
NautilusFreedesktopObjectProxy *nautilus_freedesktop_object_proxy_new (GDBusConnection *connection, const gchar *object_path);

#define NAUTILUS_FREEDESKTOP_TYPE_OBJECT_SKELETON (nautilus_freedesktop_object_skeleton_get_type ())
#define NAUTILUS_FREEDESKTOP_OBJECT_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_SKELETON, NautilusFreedesktopObjectSkeleton))
#define NAUTILUS_FREEDESKTOP_OBJECT_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_SKELETON, NautilusFreedesktopObjectSkeletonClass))
#define NAUTILUS_FREEDESKTOP_OBJECT_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_SKELETON, NautilusFreedesktopObjectSkeletonClass))
#define NAUTILUS_FREEDESKTOP_IS_OBJECT_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_SKELETON))
#define NAUTILUS_FREEDESKTOP_IS_OBJECT_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_SKELETON))

typedef struct _NautilusFreedesktopObjectSkeleton NautilusFreedesktopObjectSkeleton;
typedef struct _NautilusFreedesktopObjectSkeletonClass NautilusFreedesktopObjectSkeletonClass;
typedef struct _NautilusFreedesktopObjectSkeletonPrivate NautilusFreedesktopObjectSkeletonPrivate;

struct _NautilusFreedesktopObjectSkeleton
{
  /*< private >*/
  GDBusObjectSkeleton parent_instance;
  NautilusFreedesktopObjectSkeletonPrivate *priv;
};

struct _NautilusFreedesktopObjectSkeletonClass
{
  GDBusObjectSkeletonClass parent_class;
};

GType nautilus_freedesktop_object_skeleton_get_type (void) G_GNUC_CONST;
NautilusFreedesktopObjectSkeleton *nautilus_freedesktop_object_skeleton_new (const gchar *object_path);
void nautilus_freedesktop_object_skeleton_set_file_manager1 (NautilusFreedesktopObjectSkeleton *object, NautilusFreedesktopFileManager1 *interface_);

/* ---- */

#define NAUTILUS_FREEDESKTOP_TYPE_OBJECT_MANAGER_CLIENT (nautilus_freedesktop_object_manager_client_get_type ())
#define NAUTILUS_FREEDESKTOP_OBJECT_MANAGER_CLIENT(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_MANAGER_CLIENT, NautilusFreedesktopObjectManagerClient))
#define NAUTILUS_FREEDESKTOP_OBJECT_MANAGER_CLIENT_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_MANAGER_CLIENT, NautilusFreedesktopObjectManagerClientClass))
#define NAUTILUS_FREEDESKTOP_OBJECT_MANAGER_CLIENT_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_MANAGER_CLIENT, NautilusFreedesktopObjectManagerClientClass))
#define NAUTILUS_FREEDESKTOP_IS_OBJECT_MANAGER_CLIENT(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_MANAGER_CLIENT))
#define NAUTILUS_FREEDESKTOP_IS_OBJECT_MANAGER_CLIENT_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), NAUTILUS_FREEDESKTOP_TYPE_OBJECT_MANAGER_CLIENT))

typedef struct _NautilusFreedesktopObjectManagerClient NautilusFreedesktopObjectManagerClient;
typedef struct _NautilusFreedesktopObjectManagerClientClass NautilusFreedesktopObjectManagerClientClass;
typedef struct _NautilusFreedesktopObjectManagerClientPrivate NautilusFreedesktopObjectManagerClientPrivate;

struct _NautilusFreedesktopObjectManagerClient
{
  /*< private >*/
  GDBusObjectManagerClient parent_instance;
  NautilusFreedesktopObjectManagerClientPrivate *priv;
};

struct _NautilusFreedesktopObjectManagerClientClass
{
  GDBusObjectManagerClientClass parent_class;
};

GType nautilus_freedesktop_object_manager_client_get_type (void) G_GNUC_CONST;

GType nautilus_freedesktop_object_manager_client_get_proxy_type (GDBusObjectManagerClient *manager, const gchar *object_path, const gchar *interface_name, gpointer user_data);

void nautilus_freedesktop_object_manager_client_new (
    GDBusConnection        *connection,
    GDBusObjectManagerClientFlags  flags,
    const gchar            *name,
    const gchar            *object_path,
    GCancellable           *cancellable,
    GAsyncReadyCallback     callback,
    gpointer                user_data);
GDBusObjectManager *nautilus_freedesktop_object_manager_client_new_finish (
    GAsyncResult        *res,
    GError             **error);
GDBusObjectManager *nautilus_freedesktop_object_manager_client_new_sync (
    GDBusConnection        *connection,
    GDBusObjectManagerClientFlags  flags,
    const gchar            *name,
    const gchar            *object_path,
    GCancellable           *cancellable,
    GError                **error);

void nautilus_freedesktop_object_manager_client_new_for_bus (
    GBusType                bus_type,
    GDBusObjectManagerClientFlags  flags,
    const gchar            *name,
    const gchar            *object_path,
    GCancellable           *cancellable,
    GAsyncReadyCallback     callback,
    gpointer                user_data);
GDBusObjectManager *nautilus_freedesktop_object_manager_client_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GDBusObjectManager *nautilus_freedesktop_object_manager_client_new_for_bus_sync (
    GBusType                bus_type,
    GDBusObjectManagerClientFlags  flags,
    const gchar            *name,
    const gchar            *object_path,
    GCancellable           *cancellable,
    GError                **error);


G_END_DECLS

#endif /* __NAUTILUS_FREEDESKTOP_GENERATED_H__ */
